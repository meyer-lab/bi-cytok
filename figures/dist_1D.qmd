---
title: "Top epitopes for 1D distance metrics"
---

# Summary
Generates horizontal bar charts ranking the top 10 receptors by 1D KL Divergence and EMD values. Identifies the most discriminative individual receptors for distinguishing target from off-target cell populations using single-receptor expression distributions.

# Imports
- CITE-seq surface marker expression data (`importCITE`)
- 1D distance metric calculation functions (`KL_EMD_1D`)

# Parameters
- `targ_cell`: String identifier for target cell type in distance metric comparison
- `receptors_of_interest`: List of strings naming specific receptors to analyze, or None for all filtered receptors
- `sample_size`: Integer number of cells sampled from CITE-seq data for analysis
- `cell_categorization`: String column name for cell type classification in CITE-seq data

# Outputs
- **Bar Chart 1**: Top 10 KL Divergence receptors showing:
  - KL Divergence values on y-axis
  - Red bars indicating discriminative performance
- **Bar Chart 2**: Top 10 EMD receptors with identical formatting using blue bars

```{python}
%config InlineBackend.figure_formats = ['svg']

import numpy as np
import matplotlib.pyplot as plt

from bicytok.distance_metric_funcs import KL_EMD_1D
from bicytok.imports import filter_receptor_abundances, importCITE, sample_receptor_abundances

targ_cell = "Treg"
receptors_of_interest = None
sample_size = 100
cell_categorization = "CellType2"

CITE_DF = importCITE()

assert targ_cell in CITE_DF[cell_categorization].unique()

epitopes = [
    col
    for col in CITE_DF.columns
    if col not in ["Cell", "CellType1", "CellType2", "CellType3"]
]
epitopesDF = CITE_DF[epitopes + [cell_categorization]]
epitopesDF = epitopesDF.rename(columns={cell_categorization: "Cell Type"})
sampleDF = sample_receptor_abundances(
    CITE_DF=epitopesDF,
    numCells=min(sample_size, epitopesDF.shape[0]),
    targCellType=targ_cell,
)
filtered_sampleDF = filter_receptor_abundances(
    sampleDF, targ_cell_type=targ_cell, epitope_list=receptors_of_interest
)
receptors_of_interest = filtered_sampleDF.columns[
    ~filtered_sampleDF.columns.isin(["Cell Type"])
]

on_target_mask = (filtered_sampleDF["Cell Type"] == targ_cell).to_numpy()
off_target_mask = ~on_target_mask
rec_abundances = filtered_sampleDF[receptors_of_interest].to_numpy()
KL_values, EMD_values = KL_EMD_1D(rec_abundances, on_target_mask, off_target_mask)

top_KL_indices = np.argsort(np.nan_to_num(KL_values))[-10:]
top_EMD_indices = np.argsort(np.nan_to_num(EMD_values))[-10:]
```

```{python}
#| fig-cap: "KL divergence values of the top 10 epitopes"

# Plot KL values
plt.bar(
    filtered_sampleDF.columns[top_KL_indices],
    KL_values[top_KL_indices],
    color="r",
)

plt.ylabel("KL Divergence")
plt.xticks(rotation=45)
plt.show()
```

```{python}
#| fig-cap: "EMD values of the top 10 epitopes"

# Plot EMD values
plt.bar(
    filtered_sampleDF.columns[top_EMD_indices],
    EMD_values[top_EMD_indices],
    color="b",
)

plt.ylabel("EMD")
plt.xticks(rotation=45)
plt.show()
```

## Parameter Summary
```{python}
#| output: asis

text = f"""
Identified epitopes with the top ten KL divergence and EMD between **{targ_cell}**s and other cell types. Used **{sample_size}** cells sampled from the CITE-seq data.
\n\n
Analyzed the following receptors: **{', '.join(receptors_of_interest)}**.
"""

print(text)
```
