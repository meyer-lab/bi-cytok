---
title: "Relationship between KL Divergence and EMD metrics"
---

# Summary
Figure file to visualize the relationship between KL divergence and EMD metrics across all receptors, highlighting outliers where metrics significantly disagree.

# Imports:
- The CITE-seq dataframe (`importCITE`)

# Parameters:
- targ_cell: cell type whose receptor distributions will be compared to off-target cells
- sample_size: number of cells to sample for analysis
- cell_categorization: column name for cell type classification

# Outputs:
- Scatter plot of KL divergence vs EMD for all receptors
- Highlighted and labeled outlier receptors
- Summary statistics on the correlation between these metrics

```{python}
%config InlineBackend.figure_formats = ['svg']

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import scipy.stats as stats
from sklearn.linear_model import LinearRegression
from bicytok.distance_metric_funcs import KL_EMD_1D
from bicytok.imports import filter_receptor_abundances, importCITE, sample_receptor_abundances

plt.rcParams["svg.fonttype"] = "none"

targ_cell = "Treg"
sample_size = 100
cell_categorization = "CellType2"

CITE_DF = importCITE()
assert targ_cell in CITE_DF[cell_categorization].unique()

epitopes = [
    col
    for col in CITE_DF.columns
    if col not in ["Cell", "CellType1", "CellType2", "CellType3"]
]
epitopes_df = CITE_DF[epitopes + [cell_categorization]]
epitopes_df = epitopes_df.rename(columns={cell_categorization: "Cell Type"})
sample_df = sample_receptor_abundances(
    CITE_DF=epitopes_df,
    numCells=min(sample_size, epitopes_df.shape[0]),
    targCellType=targ_cell,
)
filtered_sample_df = filter_receptor_abundances(sample_df, targ_cell)
receptor_columns = filtered_sample_df.columns[:-1]

rec_abundances = filtered_sample_df[receptor_columns].to_numpy()
targ_mask = (filtered_sample_df["Cell Type"] == targ_cell).to_numpy()
off_targ_mask = ~targ_mask
KL_div_vals, EMD_vals = KL_EMD_1D(rec_abundances, targ_mask, off_targ_mask)
results_df = pd.DataFrame(
    {"Receptor": receptor_columns, "KL_Divergence": KL_div_vals, "EMD": EMD_vals}
).dropna()

correlation, _ = stats.pearsonr(results_df["KL_Divergence"], results_df["EMD"])
print(f"Pearson correlation: {correlation:.4f}")

reg_model = LinearRegression()
X = results_df["EMD"].values.reshape(-1, 1)
y = results_df["KL_Divergence"].values
reg_model.fit(X, y)
r_squared = reg_model.score(X, y)
slope = reg_model.coef_[0]
intercept = reg_model.intercept_

results_df["Predicted_KL"] = intercept + slope * results_df["EMD"]
results_df["Residual"] = results_df["KL_Divergence"] - results_df["Predicted_KL"]
results_df["Abs_Residual"] = np.abs(results_df["Residual"])

residual_threshold = 1.5 * np.std(results_df["Residual"])

results_df["Outlier_Type"] = "Normal"
results_df.loc[results_df["Residual"] > residual_threshold, "Outlier_Type"] = (
    "High KL, Low EMD"
)
results_df.loc[results_df["Residual"] < -residual_threshold, "Outlier_Type"] = (
    "Low KL, High EMD"
)

high_kl_outliers = results_df[
    results_df["Outlier_Type"] == "High KL, Low EMD"
].nlargest(5, "Abs_Residual")
low_kl_outliers = results_df[
    results_df["Outlier_Type"] == "Low KL, High EMD"
].nlargest(5, "Abs_Residual")
```

```{python}
#| fig-cap: "KL Divergence vs EMD scatter plot with outlier analysis"

color_map = {
    "Normal": "gray",
    "High KL, Low EMD": "red",
    "Low KL, High EMD": "blue",
}
colors = [color_map[t] for t in results_df["Outlier_Type"]]
plt.scatter(
    results_df["EMD"],
    results_df["KL_Divergence"],
    alpha=0.6,
    c=colors,
    s=30,
    edgecolors="k",
    linewidths=0.5,
)

x_range = np.linspace(min(results_df["EMD"]), max(results_df["EMD"]), 100)
y_pred = intercept + slope * x_range
plt.plot(x_range, y_pred, "k--", label=f"Linear fit (R²={r_squared:.2f})")

for _, row in pd.concat([high_kl_outliers, low_kl_outliers]).iterrows():
    plt.annotate(
        row["Receptor"],
        xy=(row["EMD"], row["KL_Divergence"]),
        xytext=(5, 5),
        textcoords="offset points",
        fontsize=9,
        bbox=dict(boxstyle="round,pad=0.3", fc="white", alpha=0.8),
    )

handles = [
    plt.Line2D(
        [0],
        [0],
        marker="o",
        color="w",
        markerfacecolor=color,
        markersize=10,
        label=label,
    )
    for label, color in color_map.items()
]
plt.legend(handles=handles, title="Epitope Categories", bbox_to_anchor=(1.05, 1))

plt.xlabel("EMD", fontsize=11)
plt.ylabel("KL Divergence", fontsize=11)
plt.grid(True, linestyle="--", alpha=0.7)
plt.tight_layout()
plt.show()
```

```{python}

stats_text = (
    f"Pearson correlation: {correlation:.4f}\n"
    f"R²: {r_squared:.4f}\n"
    f"Slope: {slope:.4f}\n"
    f"Number of Epitopes: {len(results_df)}"
)

print(stats_text)
```

## Parameter Summary
```{python}
#| output: asis

text = f"""
Visualized the relationship between KL Divergence and EMD between **{targ_cell}** and all other cell types. The analysis was performed on **{sample_size}** cells sampled from the CITE-seq dataset.
\n\n
The receptors analyzed were **{', '.join(receptor_columns)}**.
"""

print(text)
```