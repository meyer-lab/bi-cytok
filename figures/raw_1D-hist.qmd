---
title: "1D receptor distribution analysis"
---

# Summary
Generates a histogram with kernel density estimation (KDE) overlay to visualize the expression distribution of a single receptor across target and off-target cell populations. Calculates and displays 1D distance metrics to quantify distributional differences between cell types.

# Imports
- CITE-seq surface marker expression data (`importCITE`)
- 1D distance metric calculation functions (`KL_EMD_1D`)

# Parameters
- `receptor`: String name of receptor for distribution analysis
- `targ_cell`: String identifier for target cell type in distribution comparison
- `sample_size`: Integer number of cells sampled from CITE-seq data for analysis
- `cell_categorization`: String column name for cell type classification in CITE-seq data
- `plot_cell_types`: List of strings specifying cell type labels for plotting
- `stat`: String specifying histogram statistic ('count', 'density', 'probability')
- `x_limit`: Boolean flag to limit x-axis to 99th percentile of target cell distribution
- `normalize`: Boolean flag to normalize receptor counts by mean expression

# Outputs
- **Histogram with KDE**: Single receptor expression distribution showing:
  - Overlaid histograms for target and off-target cell populations
  - KDE curves using Scott bandwidth method
  - Color-coded cell type populations
  - 1D KL Divergence and EMD values displayed in plot title
  - Configurable normalization and axis limits

```{python}
%config InlineBackend.figure_formats = ['svg']

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

from bicytok.distance_metric_funcs import KL_EMD_1D
from bicytok.imports import importCITE, sample_receptor_abundances

x=y

plt.rcParams["svg.fonttype"] = "none"

receptor = "CD27"
targ_cell = "Treg"
sample_size = 5000
cell_categorization = "CellType2"
plot_cell_types = [targ_cell, "other"]
stat = "count"
x_limit = True
normalize = False

CITE_DF = importCITE()

assert targ_cell in CITE_DF[cell_categorization].unique()

epitopes = [
    col
    for col in CITE_DF.columns
    if col not in ["Cell", "CellType1", "CellType2", "CellType3"]
]
if receptor not in epitopes:
    raise ValueError(
        f"Receptor '{receptor}' not found. Available receptors: {epitopes}"
    )
# Use converted receptor abundances to calculate metric values
epitopes_df = CITE_DF[epitopes + [cell_categorization]]
epitopes_df = epitopes_df.rename(columns={cell_categorization: "Cell Type"})
sample_df = sample_receptor_abundances(
    CITE_DF=epitopes_df,
    numCells=min(sample_size, epitopes_df.shape[0]),
    targCellType=targ_cell,
    balance=True,
    rand_state=42,
)
targ_mask = (sample_df["Cell Type"] == targ_cell).to_numpy()
off_targ_mask = ~targ_mask
rec_abundances = sample_df[[receptor]].to_numpy()
KL_div_vals, EMD_vals = KL_EMD_1D(rec_abundances, targ_mask, off_targ_mask)
kl_val = KL_div_vals[0]
emd_val = EMD_vals[0]

# Use raw receptor counts for plotting
sample_df = sample_receptor_abundances(
    CITE_DF=epitopes_df,
    numCells=min(sample_size, epitopes_df.shape[0]),
    targCellType=targ_cell,
    balance=False,
    rand_state=42,
)
targ_mask = (sample_df["Cell Type"] == targ_cell).to_numpy()
sample_df.loc[sample_df["Cell Type"] != targ_cell, "Cell Type"] = "other"

rec_abundance = sample_df[receptor].values
mean_abundance = np.mean(rec_abundance)
targ_abundances = rec_abundance[targ_mask]

all_cell_abundances = []
for cell_type in plot_cell_types:
    if cell_type not in sample_df["Cell Type"].unique():
        continue
    mask = (sample_df["Cell Type"] == cell_type).to_numpy()
    if normalize:
        all_cell_abundances.append(rec_abundance[mask] / mean_abundance)
    else:
        all_cell_abundances.append(rec_abundance[mask])
```

```{python}
#| fig-cap: "1D distribution of receptor with histogram and KDE overlay"

colors = ["#CF4D6F", "#2774AE"]
cell_type_labels = ["Target", "Off-target"]
for i, abundances in enumerate(all_cell_abundances):
    if len(abundances) == 0:
        continue
    sns.histplot(
        abundances,
        color=colors[i],
        alpha=0.5,
        label=cell_type_labels[i],
        stat=stat,
        kde=True,
        kde_kws={"bw_method": "scott"},
    )

plt.title(
    f"{receptor} Distribution\nKL: {kl_val:.2f}, EMD: {emd_val:.2f}", fontsize=10
)
if normalize:
    plt.xlabel("Normalized receptor count", fontsize=28)
else:
    plt.xlabel(f"Number of {receptor} Receptors", fontsize=28)

if stat == "density":
    plt.ylabel("Density", fontsize=28)
elif stat == "count":
    plt.ylabel("Number of Cells", fontsize=28)
elif stat == "probability":
    plt.ylabel("Proportion of cells", fontsize=28)

x_max = np.percentile(targ_abundances, 99.5)
if x_limit:
    plt.xlim(0, x_max * 1.1)
plt.xlim(0, 240)
plt.tick_params(axis="x", labelsize=25)
plt.tick_params(axis="y", labelsize=25)
plt.legend(loc="upper right", fontsize=25)
plt.grid(alpha=0.3, linestyle="--")
plt.tight_layout()
plt.show()
```

## Parameter Summary
```{python}
#| output: asis

text = f"""
Analyzed the distribution of the receptor **{receptor}** between target cell type **{targ_cell}** and all other cell types. The analysis was performed on **{sample_size}** cells sampled from the CITE-seq dataset. The histogram statistic used was '**{stat}**' and the epitope counts were {'**normalized**' if normalize else '**not normalized**'} for comparison
"""

print(text)
```