---
title: "Calculation of selectivity of pre-specified receptor combinations"
---

# Summary
This analysis calculates the selectivity of a specified set of receptors and valencies using CITE-seq data.

# Imports
- CITE-seq surface marker expression data (`importCITE`)
- Selectivity optimization functions (`optimize_affs`)

# Parameters
- `sample_size`: Integer number of cells sampled from CITE-seq data for analysis
- `targ_cell`: String identifier for target cell type in selectivity optimization
- `dose`: Float concentration of ligand complex in binding model
- `cell_categorization`: String column name for cell type classification in CITE-seq data
- `receptors`: List of strings naming receptors for selectivity analysis
- `model_valencies`: 2D numpy array specifying tetravalent complex design [[signal, target1, target2]]

# Outputs
- **Printed Output**: Processing time for selectivity calculation
- **Printed Output**: Calculated selectivity value for specified receptors and valencies

```{python}
%config InlineBackend.figure_formats = ['svg']

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from bicytok.imports import filter_receptor_abundances, importCITE, sample_receptor_abundances
from bicytok.selectivity_funcs import optimize_affs

import time

sample_size = 100
targ_cell = "Treg"
dose = 1e-10
cell_categorization = "CellType2"
receptors = ["CD122", "CD25", "CD4-1", "CD27"]
model_valencies = np.array([[(1), (1), (1), (1)]])

CITE_DF = importCITE()

assert targ_cell in CITE_DF[cell_categorization].unique()

epitopes = [
    col
    for col in CITE_DF.columns
    if col not in ["CellType1", "CellType2", "CellType3"]
]
epitopes_df = CITE_DF[epitopes + [cell_categorization]]
epitopes_df = epitopes_df.rename(columns={cell_categorization: "Cell Type"})
sample_df = sample_receptor_abundances(
    CITE_DF=epitopes_df,
    numCells=min(sample_size, epitopes_df.shape[0]),
    targCellType=targ_cell,
)
filtered_sample_df = filter_receptor_abundances(sample_df, targ_cell)

on_target_mask = (filtered_sample_df["Cell Type"] == targ_cell).to_numpy()
off_target_mask = ~on_target_mask

df_targ_cell = filtered_sample_df.loc[on_target_mask]
df_off_targ_cell = filtered_sample_df.loc[off_target_mask]

time_start = time.time()

rec_abundances = filtered_sample_df[receptors].to_numpy()

targ_recs = df_targ_cell[receptors].to_numpy()
off_targ_recs = df_off_targ_cell[receptors].to_numpy()
opt_selec, _, _ = optimize_affs(
    targRecs=targ_recs,
    offTargRecs=off_targ_recs,
    dose=dose,
    valencies=model_valencies,
)
selectivity = 1 / opt_selec

time_end = time.time()
print(f"Processing time for {receptors}: {time_end - time_start} seconds")

print(f"Selectivity for {receptors} with valencies {model_valencies} at dose {dose}: {selectivity}")
```

## Parameter Summary
```{python}
#| output: asis

text = f"""
Calculates the selectivity for a specific set of receptors and valencies. Target cells were **{targ_cell}**s, compared against all other cell types. The analysis was performed on **{sample_size}** cells sampled from the CITE-seq dataset.
\n\n
For selectivity optimization, the signal receptor was **{receptors[0]}**, with **{model_valencies}** valency complexes at a dose of **{dose}**.
"""

print(text)
```