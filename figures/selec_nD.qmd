---
title: "Relationship between 2D distance metrics and 3D selectivity"
---

# Summary
Generates scatter plots examining the correlation between 2D distance metrics (KL Divergence and EMD) and 3D selectivity optimization results for receptor pairs. Evaluates whether pairwise receptor distribution differences predict multivalent complex selectivity performance.

# Imports
- CITE-seq surface marker expression data (`importCITE`)
- 2D distance metric calculation functions (`KL_EMD_2D`)
- Selectivity optimization functions (`optimize_affs`)

# Parameters
- `receptor_pairs`: List of 2-element lists specifying receptor pairs for distance metric calculations and to be used as target receptors in selectivity optimization
- `signal_receptor`: String name of receptor used for signal delivery in binding model
- `sample_size`: Integer number of cells sampled from CITE-seq data for analysis
- `targ_cell`: String identifier for target cell type in selectivity optimization
- `dose`: Float concentration of ligand complex in binding model
- `cell_categorization`: String column name for cell type classification in CITE-seq data
- `model_valencies`: 2D numpy array specifying tetravalent complex design [[signal, target1, target2]]

# Outputs
- **Scatter Plot 1**: 2D KL Divergence vs 3D selectivity showing:
  - KL Divergence values on x-axis
  - Selectivity values (1/optimization_result) on y-axis
  - Color-coded points by receptor pair combination
  - Legend identifying each receptor pair
- **Scatter Plot 2**: 2D EMD vs 3D selectivity with identical formatting

```{python}
%config InlineBackend.figure_formats = ['svg']

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from bicytok.imports import filter_receptor_abundances, importCITE, sample_receptor_abundances
from bicytok.selectivity_funcs import optimize_affs

import time

sample_size = 100
targ_cell = "Treg"
dose = 1e-10
cell_categorization = "CellType2"
receptors = ["CD25", "CD4-1", "CD27"]
model_valencies = np.array([[(1), (1), (1), (1)]])

CITE_DF = importCITE()

assert targ_cell in CITE_DF[cell_categorization].unique()

epitopes = [
    col
    for col in CITE_DF.columns
    if col not in ["CellType1", "CellType2", "CellType3"]
]
epitopes_df = CITE_DF[epitopes + [cell_categorization]]
epitopes_df = epitopes_df.rename(columns={cell_categorization: "Cell Type"})
sample_df = sample_receptor_abundances(
    CITE_DF=epitopes_df,
    numCells=min(sample_size, epitopes_df.shape[0]),
    targCellType=targ_cell,
)
filtered_sample_df = filter_receptor_abundances(sample_df, targ_cell)

on_target_mask = (filtered_sample_df["Cell Type"] == targ_cell).to_numpy()
off_target_mask = ~on_target_mask

df_targ_cell = filtered_sample_df.loc[on_target_mask]
df_off_targ_cell = filtered_sample_df.loc[off_target_mask]

time_start = time.time()

rec_abundances = filtered_sample_df[receptors].to_numpy()

targ_recs = df_targ_cell[receptors].to_numpy()
off_targ_recs = df_off_targ_cell[receptors].to_numpy()
opt_selec, _, _ = optimize_affs(
    targRecs=targ_recs,
    offTargRecs=off_targ_recs,
    dose=dose,
    valencies=model_valencies,
)
selectivity = 1 / opt_selec

time_end = time.time()
print(f"Processing time for {receptors}: {time_end - time_start} seconds")

print(f"KL Divergence: {KL_div}, EMD: {EMD}, Selectivity: {selectivity}")
```

## Parameter Summary
```{python}
#| output: asis

text = f"""
Visualized the relationship between 2D distance metrics (KL Divergence and EMD) and 3D selectivity. Target cells were **{targ_cell}**s, compared against all other cell types. The analysis was performed on **{sample_size}** cells sampled from the CITE-seq dataset.
\n\n
For selectivity optimization, the signal receptor was **{signal_receptor}**, with tetravalent complexes at a dose of **{dose}**. Tetravalent complexes consisted of two signal receptor ligands, and one ligand each for the two target receptors. The epitope pairs that were analyzed were **{', '.join(map(str, receptor_pairs))}**, which served as the target receptors for selectivity optimization and as the double receptor distributions for 2D EMD and KL div. calculations.
"""

print(text)
```