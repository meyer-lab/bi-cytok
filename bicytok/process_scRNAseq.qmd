"""Read, process, and produce cell type annotations from scRNA-seq data"""


```{python}
import scanpy as sc
import matplotlib.pyplot as plt
import numpy as np

adata = sc.read_10x_mtx("/home/sama/CITE-seq_scRNA-seq_data", prefix="GSM5008737_RNA_3P-")

print(adata)

print(adata.obs)
print(adata.var)
print(adata.X)
```

```{python}
# Make variable names unique
adata.var_names_make_unique()

# Select three random genes
# np.random.seed(42)  # For reproducibility
random_genes = np.random.choice(adata.var_names, size=3, replace=False)
print(f"Selected genes: {random_genes}")

# Plot expression distributions
fig, axes = plt.subplots(1, 3, figsize=(15, 5))

for i, gene in enumerate(random_genes):
    gene_expression = adata[:, gene].X.toarray().flatten()
    
    axes[i].hist(gene_expression, bins=50, alpha=0.7, edgecolor='black')
    axes[i].set_title(f'Expression Distribution: {gene}')
    axes[i].set_xlabel('Expression Level')
    axes[i].set_ylabel('Number of Cells')
    axes[i].grid(True, alpha=0.3)

plt.tight_layout()
plt.show()
```

```{python}
# Log normalize the data
sc.pp.normalize_total(adata, target_sum=1e4)
sc.pp.log1p(adata)
print("Log normalization completed")
```

```{python}
sc.pp.highly_variable_genes(adata, min_mean=0.0005, max_mean=10, min_disp=0.5, flavor="seurat_v3")
adata_high_variability = adata[:, adata.var.highly_variable]
print(adata_high_variability)
```

```{python}
# Z-score the highly variable genes data
sc.pp.scale(adata_high_variability, max_value=10)
print("Z-score normalization completed")
print(adata_high_variability)
```

```{python}
# Run PCA
N_PRINCIPAL_COMPONENTS = 50
sc.tl.pca(adata_high_variability, n_comps=N_PRINCIPAL_COMPONENTS, svd_solver='arpack')
print(f"PCA completed with {N_PRINCIPAL_COMPONENTS} components")
```

```{python}
# Create elbow plot
variance_ratio = adata_high_variability.uns['pca']['variance_ratio']

plt.figure(figsize=(10, 6))
plt.plot(range(1, len(variance_ratio) + 1), variance_ratio, 'bo-')
plt.xlabel('Principal Component')
plt.ylabel('Variance Ratio')
plt.title('PCA Elbow Plot')
plt.grid(True, alpha=0.3)
plt.show()

print(f"First 10 PCs explain {sum(variance_ratio[:10]):.3f} of total variance")
```